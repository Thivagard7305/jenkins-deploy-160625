trigger:
  branches:
    include:
      - master

variables:
  imageName: 'my-java-app'
  dockerRegistryServiceConnection: 'ACR-Service-Connection'
  acrLoginServer: 'mygreensappacr.azurecr.io'
  containerRegistry: 'mygreensappacr'
  azureServiceConnection: 'AzureRM-AKS-Connection'            # ARM service connection
  kubernetesServiceConnection: 'AKS-K8S-Connection'           # K8s service connection
  aksCluster: 'mygreensappaks'
  aksResourceGroup: 'MyGreensApp-RG'
  namespace: 'default'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build_Java
    steps:
    - checkout: self

    - task: Maven@3
      displayName: 'Build WAR with Maven'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'

    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployToAKS
    environment: 'aks-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: 'Set AKS context'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksCluster)

          - task: KubernetesManifest@0
            displayName: Deploy to AKS
            inputs:
              action: deploy
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: $(namespace)
              manifests: |
                k8s/deployment.yaml
                k8s/service.yaml
              containers: |
                $(acrLoginServer)/$(imageName):$(Build.BuildId)
